name: Rick and Morty CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/k8s_mission:${{ github.sha }}

      # Here's where we create our local Kubernetes environment
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.5.0

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Deploy to Kind cluster
        run: |
          # Update the image tag in values.yaml
          sed -i "s/tag: .*/tag: ${{ github.sha }}/" helm/values.yaml
          
          # Install the Helm chart
          helm install rick-morty ./helm

      - name: Verify deployment
        run: |
          kubectl get pods
          kubectl get services
          kubectl get ingress
          

      - name: Test Application Endpoints
        run: |
          # Wait for pods to be ready
          kubectl wait --for=condition=ready pod -l app=rick-morty --timeout=2m
          
          # Get the service port
          PORT=$(kubectl get service rick-morty-cluster-ip -o jsonpath="{.spec.ports[0].port}")
          
          # Forward the port
          kubectl port-forward service/rick-morty-cluster-ip 8080:$PORT &
          sleep 10  # Give it time to establish the connection
          
          # Test endpoints
          curl http://localhost:8080/healthcheck
          curl http://localhost:8080/rickandmorty
          
          # Cleanup port forwarding
          pkill -f "port-forward"